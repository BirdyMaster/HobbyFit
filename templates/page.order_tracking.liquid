{% assign lang = request.locale.iso_code %}
{% if lang == 'en' %}
  {% assign lang = '' %}
{% endif %}
<p
  class="current_lang"
  data-lang="{{ lang }}"
  style="display: none;">{{ lang }}
</p>

<div style="text-align: center; margin-top: 150px">Enter your tracking number here to see your order status.</div>
<br />
<div style="text-align: center;"><input type="text" id="YQNum" maxlength="50" /> <input type="button" value="TRACK" onclick="doTrack()" /></div>
<div id="YQContainer"></div>
<!--Script code can be put in the bottom of the page, wait until the page is loaded then execute.-->
<script type="text/javascript" src="//www.17track.net/externalcall.js"></script>
<script type="text/javascript">// <![CDATA[
function doTrack() {
    var num = document.getElementById("YQNum").value;
    if(num===""){
        alert("Enter your number."); 
        return;
    }
    YQV5.trackSingle({
        //Required, Specify the container ID of the carrier content.
        YQ_ContainerId:"YQContainer",
        //Optional, specify tracking result height, max height 800px, default is 560px.
        YQ_Height:560,
        //Optional, select carrier, default to auto identify.
        YQ_Fc:"0",
        //Optional, specify UI language, default language is automatically detected based on the browser settings.
        YQ_Lang:"en",
        //Required, specify the number needed to be tracked.
        YQ_Num:num
    });
}
// ]]></script>


<script>
    function waitForDivToLoad() {
  const targetClass = 'yq-panel-logo';
  const targetNode = document.querySelector('.' + targetClass);

  if (targetNode) {
    console.log('Div with class ' + targetClass + ' has loaded.');
  } else {
    // Create a new observer instance
    const observer = new MutationObserver(function (mutationsList, observer) {
      // Check if the target div has been added to the DOM
      const targetNode = document.querySelector('.' + targetClass);
      if (targetNode) {
        console.log('Div with class ' + targetClass + ' has loaded.');
        observer.disconnect(); // Stop observing changes once the div is found
      }
    });

    // Start observing changes in the DOM
    observer.observe(document.body, { childList: true, subtree: true });
  }
}

waitForDivToLoad();






</script>