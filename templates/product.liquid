<!-- set default colors -->
{% assign color_bg = product.metafields.custom.color_bg %}
{% assign color_raw = product.metafields.custom.color_raw %}

<section class="section_productPage">
  <div class="container container_productPage">
    <div class="sticky_left">
      <div class="sticky_div">
        <div class="wrap_sliderTitle" data-effect="zoom">
          <div class="container_productPage mini">
            <h4 class="title_Product">{{ product.metafields.custom.name_short }} {{ product.metafields.custom.extra_text }}</h4>
            <div class="priceWrap_productPage">
              <p
                class="price_product_filterPage"
                data-isSale="{{ product.metafields.custom.sale}}"
                style="margin-right: 6px; font-size: 18px; font-weight: 600;">{{ product.selected_or_first_available_variant.price | money }}</p>
              <p class="price_product_filterPage compare" style="font-size: 18px; font-weight: 600;">{{ product.selected_or_first_available_variant.compare_at_price | money }}</p>
            </div>
            <p class="p_stockLeft {% if product.selected_or_first_available_variant.inventory_quantity <= 2 %}red{% endif %}" data-text_green>Liko dar
              <span data-qnt_edit data-text_green>{{ product.selected_or_first_available_variant.inventory_quantity }}</span>
            </p>
          </div>
        </div>
        <div class="swiper">
          <img
            src="{{ 'img_WAVE_filterPage.svg' | asset_url }}"
            alt=""
            class="img_WAVE_long"
            style="background-color: {{ product.metafields.custom.color_bg }}"
            data-recolor_bg>
          <div
            class="swiper-wrapper"
            data-effect="zoom"
            data-zoom_active="false"
            data-magnify="1"
            data-reset>
            {% for image in product.images %}
              {% if image.alt contains color_bg %}
                <div class="swiper-slide" data-reset>
                  <img
                    src="{{ image | img_url: '600x600' }}"
                    alt=" {{ image.alt }}"
                    class="imgSwiper"
                    draggable="false">
                </div>
              {% endif %}
            {% endfor %}

          </div>
        </div>
        <div class="sliderControls" data-effect="zoom">
          <div class="container_productPage mini" style="flex-wrap: nowrap;">
            <div class="swiper-pagination" data-effect="zoom">
              <div class="swiper-pagination-bullet swiper-pagination-bullet-active"></div>
              <div class="swiper-pagination-bullet"></div>
              <div class="swiper-pagination-bullet"></div>
              <div class="swiper-pagination-bullet"></div>
            </div>
            <div class="slider_btns" data-effect="zoom">
              <div
                class="swiperBtn swiper-btn-prev"
                data-hover_grey
                data-scale>
                <div class="line_arrow"></div>
                <div class="line_arrow reverse"></div>
              </div>
              <div
                class="swiperBtn reverse swiper-btn-next"
                data-hover_grey
                data-scale>
                <div class="line_arrow"></div>
                <div class="line_arrow reverse"></div>
              </div>
              <div
                class="btn_Zoom"
                data-zoom="2"
                data-hover_grey
                data-scale></div>
            </div>
            <div class="controls_Magnify" data-effect="zoom">
              <div
                class="btn_magnify active"
                data-zoom="2"
                data-btn_magnify
                data-scale>2x</div>
              <div
                class="btn_magnify"
                data-zoom="3"
                data-btn_magnify
                data-scale>3x</div>
              <div
                class="X_wrap zoom"
                data-zoom="1"
                data-hover_grey
                data-scale>
                <div class="line_X"></div>
                <div class="line_X reverse"></div>
              </div>
            </div>
          </div>
        </div>

      </div>
    </div>

    <div class="normal_right">
      <div class="padding_subwrap">
        {% form 'product', product, class: 'form_productPage' %}
          {% if product.available %}
            <!-- from creation -->
            <input
              id="product_id"
              type="hidden"
              name="id"
              value="{{ product.selected_or_first_available_variant.id }}">
            {% if product.variants.size > 1 %}
              <div class="product_optionSet">
                {% for option in product.options_with_values %}

                  {% if option.name == 'Size' %}
                    <label for="Size" data-color_06>Pasirinkite dydį:</label>
                  {% elsif option.name == 'Color' %}
                    <label for="Color" data-color_06>Pasirinkite spalvą:</label>
                  {% endif %}

                  <fieldset class="input_box">
                    {% for value in option.values %}
                      {% if option.name == 'Color' %}
                        <!-- only print available colors -->
                        {% assign value_available = false %}
                        {% for variant in product.variants %}
                          {% if variant.available and variant.option1 == value %}
                            {% assign value_available = true %}
                            {% break %}
                          {% endif %}
                        {% endfor %}


                        {% if value_available %}
                          <div class="option">
                            <input
                              {% if option.selected_value == value %}checked{% endif %}
                              type="radio"
                              name="{{ option.name }}"
                              value="{{ value }}"
                              id="{{ option.name | handleize }}={{ value | handleize }}"
                              class="optionRadio">
                            <div class="circle_option" data-circle_color="{{ value }}"></div>
                            <label for="{{ option.name | handleize }}={{ value | handleize }}" style="display: none;">
                              {{ value }}
                            </label>
                          </div>
                        {% endif %}
                        <!-- --------------------- -->

                      {% else %}
                        <!-- print normal, letter options -->
                        <div class="option">
                          <input
                            {% if option.selected_value == value %}checked{% endif %}
                            type="radio"
                            name="{{ option.name }}"
                            value="{{ value }}"
                            id="{{ option.name | handleize }}={{ value | handleize }}"
                            class="optionRadio">
                          <label for="{{ option.name | handleize }}={{ value | handleize }}">
                            {{ value }}
                          </label>
                        </div>
                        <!-- --------------------- -->
                      {% endif %}


                    {% endfor %}
                  </fieldset>
                {% endfor %}

              </div>
            {% endif %}
            <label
              for="qantity"
              style="display: flex;"
              data-color_06>Pasirinkite kiekį:
              <span
                class=""
                style="margin-left: auto"
                data-color_06
                id="qnt_in_box">Liko dar:&nbsp<span data-qnt_edit data-color_06>{{ product.selected_or_first_available_variant.inventory_quantity }}</span>
              </span>
            </label>
            <fieldset class="input_box qnt">
              <div class="quantity_front">
                <div class="wrap_qntOptions desktop">
                  <div
                    class="qnt_option"
                    data-value="1"
                    data-recolor_bg
                    data-recolor_text_raw
                    data-scale>1</div>
                  <div
                    class="qnt_option d"
                    data-value="2"
                    data-scale>2</div>
                  <div
                    class="qnt_option d"
                    data-value="3"
                    data-scale>3</div>
                  <div
                    class="qnt_option d"
                    data-value="4"
                    data-scale>4</div>
                  <div
                    class="qnt_option d"
                    data-value="5"
                    data-scale>5</div>
                </div>
                <div class="wrap_qntOptions mobile">
                  <div
                    class="qnt_option m"
                    data-value="1"
                    data-recolor_bg
                    data-recolor_text_raw
                    data-scale>1</div>
                  <div
                    class="qnt_option m"
                    data-value="2"
                    data-scale>2</div>
                  <div
                    class="qnt_option m"
                    data-value="3"
                    data-scale>3</div>
                </div>
                <div
                  class="btn_giveQuantity"
                  data-recolor_text_raw
                  data-scale>Ivesti kieki</div>
              </div>
              <div class="quantity_back">
                <input
                  type="number"
                  name="quantity"
                  class="qntInput"
                  placeholder="Iveskite kieki..."
                  value="1"
                  onkeydown="checkKeyPress(event, this);"
                  data-qnt_left="{{ product.selected_or_first_available_variant.inventory_quantity }}">
                <div
                  class="btn_nearQtn cancel"
                  data-recolor_text_raw
                  data-scale>Atsaukti</div>
                <div
                  class="btn_nearQtn submit"
                  data-recolor_raw
                  data-scale>Vykdyti</div>
              </div>
            </fieldset>
            <div class="btnWrap_mainDesc">
              {% if cart.item_count > 0 %}
                <!-- print only cart btn -->
                <div
                  class="btn_mainDesc bag"
                  style="font-weight: 400; grid-column: 1/3;"
                  data-recolor_raw
                  data-scale>
                  <p style="color: white">Į krepšelį</p>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 337.94 421.48"
                    style="width: 17px; margin: 0 0 2px auto;">
                    <g id="Ebene_2" data-name="Ebene 2">
                      <g id="Ebene_1-2" data-name="Ebene 1"><path style="fill: white" d="M337.69,385.58,301.08,86.79a10,10,0,0,0-9.88-8.74H46.73a10,10,0,0,0-9.88,8.74L.24,385.58A32,32,0,0,0,32,421.48H305.92A32,32,0,0,0,337.69,385.58ZM268.84,141.66c-.16,3.29-.48,6.53-.94,9.72-7.1,48.82-48.69,86.29-98.93,86.29S77.14,200.2,70,151.38c-.46-3.19-.78-6.43-.94-9.72v0a24.81,24.81,0,0,1,24.68-22.26q1.06,0,2.1.09A3.05,3.05,0,0,1,98.67,123a76.8,76.8,0,0,0,5.08,43.86C115,192.6,139.94,210.5,169,210.5s54-17.9,65.22-43.62a75.89,75.89,0,0,0,6.27-30.35,77,77,0,0,0-1.18-13.42,3.14,3.14,0,0,1,2.86-3.67c.66,0,1.34-.08,2-.08a24.81,24.81,0,0,1,24.68,22.26Z" /><path style="fill: white" d="M250.13,64H225.46a2.64,2.64,0,0,1-2.33-1.43c-11.27-21.74-31.31-36.2-54.16-36.2s-42.89,14.46-54.16,36.2A2.62,2.62,0,0,1,112.48,64H87.8a1.46,1.46,0,0,1-1.38-2C100.28,25.52,132,0,169,0s68.68,25.52,82.54,62A1.46,1.46,0,0,1,250.13,64Z" /></g>
                    </g>
                  </svg>
                </div>
                <!---------------------------------------------------------------------------->
              {% else %}
                <!-- print both buttons -->
                <div
                  class="btn_mainDesc bag"
                  style="border: 1px solid {{ color_bg }}; font-weight: 400;"
                  data-recolor_border_raw
                  data-scale>
                  <p style="color:{{ color_raw }}" data-recolor_text_raw>Į krepšelį</p>
                  <svg
                    class="theSVG"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 337.94 421.48"
                    id="bag_raw">
                    <g id="Ebene_2" data-name="Ebene 2">
                      <g id="Ebene_1-2" data-name="Ebene 1"><path style="fill: white" d="M337.69,385.58,301.08,86.79a10,10,0,0,0-9.88-8.74H46.73a10,10,0,0,0-9.88,8.74L.24,385.58A32,32,0,0,0,32,421.48H305.92A32,32,0,0,0,337.69,385.58ZM268.84,141.66c-.16,3.29-.48,6.53-.94,9.72-7.1,48.82-48.69,86.29-98.93,86.29S77.14,200.2,70,151.38c-.46-3.19-.78-6.43-.94-9.72v0a24.81,24.81,0,0,1,24.68-22.26q1.06,0,2.1.09A3.05,3.05,0,0,1,98.67,123a76.8,76.8,0,0,0,5.08,43.86C115,192.6,139.94,210.5,169,210.5s54-17.9,65.22-43.62a75.89,75.89,0,0,0,6.27-30.35,77,77,0,0,0-1.18-13.42,3.14,3.14,0,0,1,2.86-3.67c.66,0,1.34-.08,2-.08a24.81,24.81,0,0,1,24.68,22.26Z" /><path style="fill: white" d="M250.13,64H225.46a2.64,2.64,0,0,1-2.33-1.43c-11.27-21.74-31.31-36.2-54.16-36.2s-42.89,14.46-54.16,36.2A2.62,2.62,0,0,1,112.48,64H87.8a1.46,1.46,0,0,1-1.38-2C100.28,25.52,132,0,169,0s68.68,25.52,82.54,62A1.46,1.46,0,0,1,250.13,64Z" /></g>
                    </g>
                  </svg>
                </div>
                <div
                  class="btn_mainDesc buy"
                  style="background-color: {{ color_raw }}; color: white;"
                  data-recolor_raw
                  data-scale>
                  Užsisakyti<span class="price_insideBtn">{{ product.selected_or_first_available_variant.price | money }}</span>
                </div>
                <!---------------------------------------------------------------------------->
              {% endif %}
            </div>
            <div class="error_box">
              <p>Dėja neturime tiek prekių. Prašau pasirinkite mažesnį kiekį.
              </p>
            </div>
            <!----------------------------------------------------------------------------------->
          {% else %}
            <div class="sign_outOfstock">Deja nebeturime šios prekės</div>
          {% endif %}
        {% endform %}
        <a
          class="sign_alreadyBag"
          style="margin-top: 16px; display: none"
          href="{{ shop.ulr }}/cart">
          <p style="margin-bottom: 10px;">
            Ši prekė jau yra Jūsų krepšelyje</p>
          <div
            class="btn_mainDesc"
            style="border: 1px solid {{ color_bg }}; font-weight: 400;"
            data-recolor_border_raw
            data-scale>
            <p style="color:{{ color_raw }}" data-recolor_text_raw>Peržiūrėti krepšelį</p>
          </div>
        </a>
        <div class="separator"></div>
        <div class="wrap_productDescription">
          {{ product.metafields.custom.bullets | metafield_tag }}
          <p class="productDescription">
            {{ product.description }}</p>
        </div>
        <div class="separator"></div>
        <div class="wrap_otherInfo">
          <div class="otherInfo">
            <img
              src="{{ 'icon_shipping.png' | asset_url }}"
              alt=""
              class="icon_otherInfo">
            <p>Nemokamas siuntimas nuo 70 Euru</p>
          </div>
          <div class="otherInfo">
            <img
              src="{{ 'icon_return.png' | asset_url }}"
              alt=""
              class="icon_otherInfo">
            <p>30 Dienu grazinimas</p>
          </div>
          <div class="otherInfo">
            <img
              src="{{ 'icon_phone.png' | asset_url }}"
              alt=""
              class="icon_otherInfo">
            <p>Nuolatos palaikomas kontaktas</p>
          </div>
        </div>
        <div class="wrap_payments">
          <img
            src="{{ 'icon_payment_visa.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_paypal.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_citadele.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_mastercard.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_klarna.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_applepay.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_amazon.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_googlepay.svg' | asset_url }}"
            alt=""
            class="icon_payment">
        </div>

      </div>
    </div>
  </div>
</section>

<section class="section_inline_slider">
  <div class="container container_inlineSlider">
    <h2 class="title_inlineSlider">Kiti pasiulymai</h2>
    <div class="controls_inlineSlider">
      <div
        class="btn_inlineSlider arrow left"
        data-direction="left"
        data-slider="hero1"
        data-scale>
        <div class="line_arrow"></div>
        <div class="line_arrow reverse"></div>
      </div>
      <div
        class="btn_inlineSlider arrow right"
        data-direction="right"
        data-slider="hero1"
        data-scale>
        <div class="line_arrow"></div>
        <div class="line_arrow reverse"></div>
      </div>
      <a
        class="btn_inlineSlider see_all"
        href="{{ collections['badmintono-prekes'].url }}"
        data-scale>Pamatyti viska</a>
    </div>
    <div class="inline_swiper_wrapper">
      <div class="grid_products_inline" data-slider="hero1">
        {% assign allProducts = collections['all'].products %}
        {% for product in allProducts %}
          <div class="product_parent_inline">
            <a
              href="{{ product.url }}"
              class="product product_inline"
              data-filter_word="{{ product.metafields.custom.filter_word}}"
              data-sale="{{ product.metafields.custom.sale}}">
              <div class="product_TOP">
                <img
                  class="img_product_filterPage"
                  src="{{ product.featured_image | img_url: '600x600' }}"
                  alt="{{ product.featured_image.alt | escape }}">
                <img
                  class="img_wave"
                  src="{{ 'img_WAVE_filterPage.svg' | asset_url }}"
                  alt="Colorful wave"
                  data-color_bg="{{ product.metafields.custom.color_bg}}">
                <p class="textIcon_sale" data-isSale="{{ product.metafields.custom.sale}}">
                  {% assign a = product.compare_at_price_max | divided_by: 1.0 %}
                  {% assign b = product.price | divided_by: 1.0 %}
                  {% assign discount = ((a | minus: b) | divided_by: a) | times: 100 %}
                  -{{ discount | round: 0 }}%
                </p>
                {% if product.options contains 'Color' %}
                  <div class="wrap_collorBubbles">
                    {% for option in product.options_with_values %}
                      {% if option.name == 'Color' %}
                        {% for value in option.values %}
                          {% assign words = value | split: ' ' %}
                          {% assign lastWord = words | last %}
                          <div class="colorBubble" style="background-color: {{ lastWord }};"></div>
                        {% endfor %}
                      {% endif %}
                    {% endfor %}
                  </div>
                {% endif %}

              </div>
              <div class="product_BOTTOM">
                <h4 class="title_product_filterPage">{{ product.metafields.custom.name_short }}</h4>
                <div class="priceWrap_filterPage">
                  <p class="price_product_filterPage" data-isSale="{{ product.metafields.custom.sale}}">{{ product.price | money }}</p>
                  <p class="price_product_filterPage compare">{{ product.compare_at_price | money }}</p>
                </div>
              </div>
              <div class="click_overlay"></div>
            </a>
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</section>

<script>
  let swiper
  let product = {{ product | json}}
  let format = "{{ shop.money_format }}"
  let product_available = {{ product.available }}
  function find_matchedVariant() {
    let selected_radios = []
    document.querySelectorAll('input[type="radio"].optionRadio:checked').forEach(x => selected_radios.push(x.value))
    const matchedVariant = product.variants.find(variant => {
      for (let option of selected_radios) {
        if (!variant.options.includes(option)) {
          return false;
        }
      }
      return true;
    });
    return matchedVariant

  }
  function is_bag_emtpy() {
    {% if cart.item_count == 0 %}
      return true
    {% else %}
      return false
    {% endif %}
  }
  function check_cart(id) {
 
    const item = {{ cart.items | json}}.filter(x => x.id == find_matchedVariant().id)
    console.log(item[0])
    const isInCart = (item.length > 0)
    const cartQnt = item[0].quantity
    return {value: isInCart, qnt: cartQnt};
  }


</script>
{{ '4_0_formatMoney.js' | asset_url | script_tag }}
<!-- formatMoney / edit_variant_price / edit_sum_price -->
{{ '4_3_setFunctions.js' | asset_url | script_tag }}
<!-- set_circleColors / changeUrl / edit_hiddenInput / bubble_jump / show_alreadyBag-->
{{ '4_4_swiper.js' | asset_url | script_tag }}
<!-- insert_swiper / initiate_swiper / replaceSwiper /  set_bullet_colors / set_parallax -->
{{ '4_5_qnt.js' | asset_url | script_tag }}
<!-- set_qnt_eventListeners / checkKeyPress / toggle_qntInput / hanlde_qntAttributes-->

<script>

  window.addEventListener('DOMContentLoaded', () => {

    if (product_available) {
      {% if product.options contains 'Color' %}
        const checked = document.querySelector('.optionRadio[name="Color"]:checked').value.split(" ");
        recolor(checked[2], checked[1]);
        set_circleColors();
        recolor_bag_raw(checked[2])
      {% else %}
        recolor('{{ color_raw }}', '{{ color_bg }}');
        recolor_bag_raw('{{ color_raw }}'){% endif %};

// -
      set_qnt_eventListeners();
      insert_swiper(get_images())
      initiate_swiper();
      reset_Transitions();
      show_alreadyBag(check_cart(find_matchedVariant().id))
      edit_size_options()
      setTimeout(() => {
        set_bullet_colors()
      }, 20)

    } else { // -
      console.log('yes')
      recolor('{{ color_raw }}', '{{ color_bg }}');
      insert_swiper(get_images())
      initiate_swiper();
      reset_Transitions();
      setTimeout(() => {
        set_bullet_colors()
      }, 20)
    }
  })

  if (product_available) {
    const radios = document.querySelectorAll('input[type="radio"].optionRadio')
    radios.forEach(radio => {
      radio.addEventListener('change', (e) => {
        recolor_default()
        edit_hiddenInput(find_matchedVariant())
        changeUrl(find_matchedVariant(), get_colors().bg, get_colors().raw)
        edit_variant_price(find_matchedVariant(), format)
        edit_sum_price(find_matchedVariant(), format)
        update_variant_qnt(get_qnt(find_matchedVariant().id))
        show_alreadyBag(check_cart(find_matchedVariant().id).value)
        bubble_jump(document.getElementById('qnt_in_box'))
        bubble_jump(document.querySelector('.p_stockLeft'))

        if (radio.getAttribute("name") == "Color") {
          document.querySelector('.swiper').style.opacity = "0%"
          document.querySelector('.sliderControls').style.opacity = "0%"
          edit_size_options()

          setTimeout(() => {
            insert_swiper(get_images())
            replaceSwiper()
            set_bullet_colors()
            document.querySelector('.sliderControls').style.opacity = "100%"
          }, 201)
        }
      })
    })
  }

// ------------------------------------------------------------------------------------------------------------
  function get_qnt(variant_id) {

    let qnt_list = [];
    let result

// -
    {% for variant in product.variants %};
      qnt_list.push([{{ variant.id }}, {{ variant.inventory_quantity }}]);{% endfor %};
    qnt_list.forEach(list_item => {
      if (list_item.includes(variant_id)) {
        result = list_item[1]
      }
    })
    return result
  }
  function update_variant_qnt(qnt) {
    const texts_qnt = document.querySelectorAll('[data-qnt_edit]');
    const qnt_input = document.querySelector('.qntInput')
    texts_qnt.forEach(x => x.textContent = qnt);
    qnt_input.dataset.qnt_left = qnt;

    const p_stockLeft = document.querySelector('.p_stockLeft')
    if (qnt <= 2) {
      p_stockLeft.classList.add('red')
    } else {
      p_stockLeft.classList.remove('red')
    }
  }

// ------------------------------------------------------------------------------------------------------------
  function get_colors() {
    {% if product.options contains 'Color' and product.available %}
      const checked = document.querySelector('.optionRadio[name="Color"]:checked').value.split(" ");
      let bg = checked[1]
      let raw = checked[2]
    {% else %}
      let bg = '{{ color_bg }}'
      let raw = '{{ color_raw }}'

// -
    {% endif %};
    return {bg, raw}
  }
  function recolor_default() {
    {% if product.options contains 'Color' %}
      const checked_color = document.querySelector('.optionRadio[name="Color"]:checked').value.split(" ");
      recolor(checked_color[2], checked_color[1]);
      recolor_bag_raw(checked_color[2])
    {% else %};
      recolor('{{ color_raw }}', '{{ color_bg }}');
      recolor_bag_raw('{{ color_raw }}')

// -
    {% endif %};
  }
  function recolor(raw, bg) {
    const elements_raw = document.querySelectorAll('[data-recolor_raw]');
    const elements_bg = document.querySelectorAll('[data-recolor_bg]');
    const text_raw = document.querySelectorAll('[data-recolor_text_raw]');
    const border_raw = document.querySelectorAll('[data-recolor_border_raw]');
    text_raw.forEach(el => el.style.color = raw);
    elements_raw.forEach(el => el.style.backgroundColor = raw);
    elements_bg.forEach(el => el.style.backgroundColor = bg);
    border_raw.forEach(el => el.style.borderColor = raw);

    const parents_optionRadio = document.querySelectorAll('.option');
    parents_optionRadio.forEach(parent => {
      const inputElement = parent.querySelector('input[type="radio"]');

      if (inputElement && inputElement.checked) {
        parent.style.backgroundColor = bg;
        parent.querySelector('label').style.color = raw;

      } else {
        parent.removeAttribute('style');
        parent.querySelector('label').style.color = 'rgba(0, 0, 0, .85)';

      }


    })



  }
  function recolor_bag_raw(color) {
    {% if cart.item_count == 0 %}
      const svgElement = document.getElementById('bag_raw');
      const paths = svgElement.querySelectorAll('path');
      paths.forEach((path) => {
        path.style.fill = color;
      });{% endif %}
  }



// ------------------------------------------------------------------------------------------------------------
  function get_images() {
    const images_raw = [];{% for image in product.images %}let {{ 'A' | append: forloop.index }} = document.createElement('img');
      {{ 'A' | append: forloop.index }}.setAttribute('src', '{{ image | img_url: 'master' | prepend: 'https:'}}');
      {{ 'A' | append: forloop.index }}.setAttribute('alt', '{{ image.alt }}')
      images_raw.push({{ 'A' | append: forloop.index }});{% endfor %};

    return images_raw
  }


// ------------------------------------------------------------------------------------------------------------



// ------------------------------------------------------------------------------------------------------------
  function edit_size_options() {
    {% if product.options contains 'Color' and product.options contains 'Size'%}
      const variants_raw = [];

// -
      {% for option in product.options_with_values %}
        {% unless option.name == "Color" %}
          {% for variant in product.variants %}
            {% if variant.inventory_quantity != 0 %}

// -
              variants_raw.push({variant_bg: '{{ variant.option1 }}', size:'{{ variant.option2 }}'});

// -
            {% endif %}
          {% endfor %}
        {% endunless %}
      {% endfor %}

      const variants_final = variants_raw.filter(x => x.variant_bg.includes(get_colors().bg))
      const size_inputs = document.querySelectorAll('.optionRadio[name="Size"]')
      let checkedInput = null;

      size_inputs.forEach(input => {
        const inputSize = input.value;

        if (variants_final.some(variant => variant.size === inputSize)) {
          input.parentElement.classList.remove('hide');
          if (! checkedInput) {
            checkedInput = input;
          }
        } else {
          input.parentElement.classList.add('hide');
        }
      });

      if (checkedInput && ! checkedInput.checked) {
        console.log('ues')
        checkedInput.checked = true;
        checkedInput.dispatchEvent(new Event('change'));
      }
    {% endif %}
  }
</script>

<!-- console.log('{{ option.name }}', '{{ value }}'); -->


{{ '4_1_productZoom.js' | asset_url | script_tag }}
{{ '6_inline_slider.js' | asset_url | script_tag }}