<!-- set default colors -->
{% assign color_bg = product.metafields.custom.color_bg %}
{% assign color_raw = product.metafields.custom.color_raw %}

<!-- get language -->
{% assign lang = request.locale.iso_code %}
{% if lang == 'en' %}
  {% assign lang = '' %}
{% endif %}
<p
  class="current_lang"
  data-lang="{{ lang }}"
  style="display: none;">{{ lang }}
</p>

<section class="section_productPage">
  <div class="container container_productPage">
    <div class="sticky_left">
      <div class="sticky_div">
        <div class="wrap_sliderTitle" data-effect="zoom">
          <div class="container_productPage mini">
            <h4 class="title_Product">{{ product.metafields.custom.name_short }} {{ product.metafields.custom.extra_text }}</h4>
            <div class="priceWrap_productPage">
              <p
                class="price_product_filterPage"
                data-isSale="{{ product.metafields.custom.sale}}"
                style="margin-right: 6px; font-size: 18px; font-weight: 600;">{{ product.selected_or_first_available_variant.price | money }}</p>
              <p class="price_product_filterPage compare" style="font-size: 18px; font-weight: 600;">{{ product.selected_or_first_available_variant.compare_at_price | money }}</p>
            </div>
            <p class="p_stockLeft {% if product.selected_or_first_available_variant.inventory_quantity <= 2 %}red{% endif %}" data-text_green>{{ "product.word_left" | t }}
              <span data-variant_qnt data-text_green>{{ product.selected_or_first_available_variant.inventory_quantity }}</span>
            </p>
          </div>
        </div>
        <div class="swiper">
          <img
            src="{{ 'img_WAVE_filterPage.svg' | asset_url }}"
            alt=""
            class="img_WAVE_long"
            style="background-color: {{ product.metafields.custom.color_bg }}"
            data-recolor_bg>
          <div
            class="swiper-wrapper"
            data-effect="zoom"
            data-zoom_active="false"
            data-magnify="1"
            data-reset>
            {% for image in product.images %}
              {% if image.alt contains color_bg %}
                <div class="swiper-slide" data-reset>
                  <img
                    src="{{ image | img_url: '600x600' }}"
                    alt=" {{ image.alt }}"
                    class="imgSwiper"
                    draggable="false">
                </div>
              {% endif %}
            {% endfor %}

          </div>
        </div>
        <div class="sliderControls" data-effect="zoom">
          <div class="container_productPage mini" style="flex-wrap: nowrap;">
            <div class="swiper-pagination" data-effect="zoom">
              <div class="swiper-pagination-bullet swiper-pagination-bullet-active"></div>
              <div class="swiper-pagination-bullet"></div>
              <div class="swiper-pagination-bullet"></div>
              <div class="swiper-pagination-bullet"></div>
            </div>
            <div class="slider_btns" data-effect="zoom">
              <div
                class="swiperBtn swiper-btn-prev"
                data-hover_grey
                data-scale>
                <div class="line_arrow"></div>
                <div class="line_arrow reverse"></div>
              </div>
              <div
                class="swiperBtn reverse swiper-btn-next"
                data-hover_grey
                data-scale>
                <div class="line_arrow"></div>
                <div class="line_arrow reverse"></div>
              </div>
              <div
                class="btn_Zoom"
                data-zoom="2"
                data-hover_grey
                data-scale></div>
            </div>
            <div class="controls_Magnify" data-effect="zoom">
              <div
                class="btn_magnify active"
                data-zoom="2"
                data-btn_magnify
                data-scale>2x</div>
              <div
                class="btn_magnify"
                data-zoom="3"
                data-btn_magnify
                data-scale>3x</div>
              <div
                class="X_wrap zoom"
                data-zoom="1"
                data-hover_grey
                data-scale>
                <div class="line_X"></div>
                <div class="line_X reverse"></div>
              </div>
            </div>
          </div>
        </div>

      </div>
    </div>
    
    <div class="normal_right">
      <div class="padding_subwrap">
        {% form 'product', product, class: 'form_productPage' %}
          {% if product.available %}
            <!-- from creation -->
            <input
              id="product_id"
              type="hidden"
              name="id"
              value="{{ product.selected_or_first_available_variant.id }}">
            {% if product.variants.size > 1 %}
              <div class="product_optionSet">
                {% for option in product.options_with_values %}

                  {% if option.name == 'Size' %}
                    <label for="Size" data-color_06>{{ "product.word_chooseSize" | t }}</label>
                  {% elsif option.name == 'Color' %}
                    <label for="Color" data-color_06>{{ "product.word_chooseColor" | t }}</label>
                  {% endif %}

                  <fieldset class="input_box">
                    {% for value in option.values %}

                      {% if option.name == 'Color' %}
                        <!-- only print available colors -->
                        {% assign value_available = false %}
                        {% for variant in product.variants %}
                          {% if variant.available and variant.option1 == value %}
                            {% assign value_available = true %}
                            {% break %}
                          {% endif %}
                        {% endfor %}


                        {% if value_available %}
                          <div class="option">
                            <input
                              {% if option.selected_value == value %}checked{% endif %}
                              type="radio"
                              name="{{ option.name }}"
                              value="{{ value }}"
                              id="{{ option.name | handleize }}={{ value | handleize }}"
                              class="optionRadio">
                            <label for="{{ option.name | handleize }}={{ value | handleize }}" style="display: none;">
                              {{ value }}
                            </label>
                            <div class="circle_option" data-circle_color="{{ value }}"></div>
                          </div>
                        {% endif %}
                        <!-- --------------------- -->

                      {% else %}
                        <!-- print normal, letter options (only available ones) -->
                        <!-- if one of the product options has this value, it means it does in fact exist, so print it-->
                        {% assign value_size = value %}
                        {% assign exists = false %}
                        
                        {% for variant in product.variants %}
                          {% if variant.available and exists == false %}
                            {% for value in variant.options %}
                              {% if value == value_size %}
                                {% assign exists = true %}
                              {% endif %}
                            {% endfor %}
                          {% endif %}
                        {% endfor %}
     
                        {% if exists == true %}
                          <div class="option">
                            <input
                              {% if option.selected_value == value %}checked{% endif %}
                              type="radio"
                              name="{{ option.name }}"
                              value="{{ value }}"
                              id="{{ option.name | handleize }}={{ value | handleize }}"
                              class="optionRadio">
                            <label for="{{ option.name | handleize }}={{ value | handleize }}">
                              {{ value }}
                            </label>
                          </div>
                        {% endif %}
                        <!-- --------------------- -->
                      {% endif %}


                    {% endfor %}
                  </fieldset>
                {% endfor %}

              </div>
            {% endif %}
            <label
              for="qantity"
              style="display: flex;"
              data-color_06>{{ "product.word_chooseQnt" | t }}
              <span
                class=""
                style="margin-left: auto"
                data-color_06
                id="qnt_in_box">{{ "product.word_left" | t }}&nbsp;<span data-variant_qnt data-color_06>{{ product.selected_or_first_available_variant.inventory_quantity }}</span>
              </span>
            </label>
            <fieldset class="input_box qnt" data-box="closed">
              <div class="quantity_front">
                <div class="wrap_qntOptions desktop">
                  <div
                    class="qntOption d active"
                    data-value="1"
                    data-recolor_bg
                    data-recolor_text_raw
                    data-scale>1
                  </div>
                  <div
                    class="qntOption d"
                    data-value="2"
                    data-scale>2
                  </div>
                  <div
                    class="qntOption d"
                    data-value="3"
                    data-scale>3
                  </div>
                  <div
                    class="qntOption d"
                    data-value="4"
                    data-scale>4
                  </div>
                  <div
                    class="qntOption d last"
                    data-value="5"
                    data-scale>5
                  </div>
                </div>
                <div class="wrap_qntOptions mobile">
                  <div
                    class="qntOption m active"
                    data-value="1"
                    data-recolor_bg
                    data-recolor_text_raw
                    data-scale>1</div>
                  <div
                    class="qntOption m"
                    data-value="2"
                    data-scale>2</div>
                  <div
                    class="qntOption m last"
                    data-value="3"
                    data-scale>3</div>
                </div>
                <div
                  class="btn_giveQuantity d disabled"
                  data-recolor_text_raw
                  data-scale>{{ "product.word_more" | t }}</div>
                <div
                class="btn_giveQuantity m disabled"
                data-recolor_text_raw
                  data-scale>{{ "product.word_more" | t }}</div>
                <div class="textAlert cart_full">
                  {{ "alerts.alert_cartFull_pre" | t }}&nbsp;<span data-cart_qnt></span>&nbsp;{{ "product.word_item" | t }} {{ "alerts.alert_cartFull_post" | t }}
                  <!-- Sie haben bereits 4 Stück im Einkaufswagen -->
                </div>
              </div>
              <div class="quantity_back">
                <div class="qnt_back_TOP">
                  <input
                  type="number"
                  name="quantity"
                  class="qntInput"
                  value="1"
                  data-qnt_left="{{ product.selected_or_first_available_variant.inventory_quantity }}"
                  style="display: none">
                  <input
                    type="number"
                    name="fake"
                    class="qntInput_decoy"
                    placeholder="{{ "product.word_qntInput" | t }}"
                    onkeydown="checkKeyPress(event, this);"
                    style="font-size: 17px">
                  <div
                    class="btn_nearQtn cancel"
                    data-recolor_text_raw
                    data-scale>{{ "product.word_cancel" | t }}</div>
                  <div
                    class="btn_nearQtn submit"
                    data-recolor_raw
                    data-scale>{{ "product.word_submit" | t }}</div>
                </div>
                <div class="wrap_qntOptions_expanded d">
                  <div
                    class="qntOption d exp active"
                    data-value="1"
                    data-recolor_bg
                    data-recolor_text_raw
                    data-scale>1
                  </div>
                  <div
                    class="qntOption d exp"
                    data-value="2"
                    data-scale>2
                  </div>
                  <div
                    class="qntOption d exp"
                    data-value="3"
                    data-scale>3
                  </div>
                  <div
                    class="qntOption d exp"
                    data-value="4"
                    data-scale>4
                  </div>
                  <div
                    class="qntOption d exp"
                    data-value="5"
                    data-scale>5
                  </div>
                  <div
                    class="qntOption d exp"
                    data-value="6"
                    data-scale>6
                  </div>
                  <div
                    class="qntOption d exp"
                    data-value="7"
                    data-scale>7
                  </div>
                  <div
                    class="qntOption d exp"
                    data-value="8"
                    data-scale>8
                  </div>
                  <div
                    class="qntOption d exp"
                    data-value="9"
                    data-scale>9
                  </div>
                  <div
                    class="qntOption d exp"
                    data-value="10"
                    data-scale>10
                  </div>
                  <div
                    class="qntOption d exp"
                    data-value="11"
                    data-scale>11
                  </div>
                  <div
                    class="qntOption d exp last"
                    data-value="12"
                    data-scale>12
                  </div>
                </div>
                <div class="wrap_qntOptions_expanded m">
                  <div
                    class="qntOption m exp active"
                    data-value="1"
                    data-recolor_bg
                    data-recolor_text_raw
                    data-scale>1
                  </div>
                  <div
                    class="qntOption m exp"
                    data-value="2"
                    data-scale>2
                  </div>
                  <div
                    class="qntOption m exp"
                    data-value="3"
                    data-scale>3
                  </div>
                  <div
                    class="qntOption m exp"
                    data-value="4"
                    data-scale>4
                  </div>
                  <div
                    class="qntOption m exp"
                    data-value="5"
                    data-scale>5
                  </div>
                  <div
                    class="qntOption m exp"
                    data-value="6"
                    data-scale>6
                  </div>
                  <div
                    class="qntOption m exp"
                    data-value="7"
                    data-scale>7
                  </div>
                  <div
                    class="qntOption m exp"
                    data-value="8"
                    data-scale>8
                  </div>
                  <div
                    class="qntOption m exp"
                    data-value="9"
                    data-scale>9
                  </div>
                  <div
                    class="qntOption m exp last"
                    data-value="10"
                    data-scale>10
                  </div>
                </div>
            </fieldset>

            <p class="redText qnt_isCart">{{ "alerts.red_qntCart_pre" | t }} <span data-variant_qnt></span> {{ "product.word_item" | t }} {{ "alerts.red_qntCart_mid" | t }} <span data-cart_qnt></span> {{ "product.word_item" | t }} {{ "alerts.red_qntCart_post" | t }} <span data-qnt_avail></span> {{ "product.word_item" | t }}.</p>
            <!-- Es sind nur noch 4 Stück übrig, und Sie haben bereits 3 Stück in Ihrem Einkaufswagen. Wählen Sie gerne bis zu 1 Stück -->
            <p class="redText qnt">{{ "alerts.red_qnt_pre" | t }} <span data-variant_qnt></span> {{ "product.word_item" | t }} {{ "alerts.red_qnt_post" | t }}</p>
            <!-- Es sind nur noch 4 Stück übrig -->
            <p class="textAlert isCart">{{ "alerts.alert_isCart_pre" | t }} (<span data-cart_qnt></span>). {{ "alerts.alert_isCart_post" | t }} <span data-qnt_avail></span> {{ "product.word_item" | t }}</p>
            <!-- Diese Ware ist bereits in Ihrem Einkaufswagen (2 Stück). Wählen Sie gerne bis zu 3 Stück -->

            <div class="wrap_formBtns">
              <!-- form btns -->
              <div
                class="formBtn buy"
                style="background-color: {{ color_raw }}; color: white;"
                data-recolor_raw
                data-scale>
                {{ "product.btnWord_order_pre" | t }}&nbsp;<span data-chosen_qnt></span>&nbsp;{{ "product.word_item" | t }} {{ "product.btnWord_order_post" | t }}
                <span class="price_insideBtn" data-price_sum_calc>{{ product.selected_or_first_available_variant.price | money }}</span>
              </div>
              <div
                class="formBtn addCart main isCart"
                style="font-weight: 400;"
                data-recolor_raw
                data-scale>
                <p style="color: white">{{ "product.btnWord_addMore_pre" | t }}&nbsp;<span data-chosen_qnt></span>&nbsp;{{ "product.btnWord_addMore_post" | t }}</p>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 337.94 421.48"
                  style="width: 17px; margin: 0 0 2px auto;">
                  <g id="Ebene_2" data-name="Ebene 2">
                    <g id="Ebene_1-2" data-name="Ebene 1"><path style="fill: white" d="M337.69,385.58,301.08,86.79a10,10,0,0,0-9.88-8.74H46.73a10,10,0,0,0-9.88,8.74L.24,385.58A32,32,0,0,0,32,421.48H305.92A32,32,0,0,0,337.69,385.58ZM268.84,141.66c-.16,3.29-.48,6.53-.94,9.72-7.1,48.82-48.69,86.29-98.93,86.29S77.14,200.2,70,151.38c-.46-3.19-.78-6.43-.94-9.72v0a24.81,24.81,0,0,1,24.68-22.26q1.06,0,2.1.09A3.05,3.05,0,0,1,98.67,123a76.8,76.8,0,0,0,5.08,43.86C115,192.6,139.94,210.5,169,210.5s54-17.9,65.22-43.62a75.89,75.89,0,0,0,6.27-30.35,77,77,0,0,0-1.18-13.42,3.14,3.14,0,0,1,2.86-3.67c.66,0,1.34-.08,2-.08a24.81,24.81,0,0,1,24.68,22.26Z" /><path style="fill: white" d="M250.13,64H225.46a2.64,2.64,0,0,1-2.33-1.43c-11.27-21.74-31.31-36.2-54.16-36.2s-42.89,14.46-54.16,36.2A2.62,2.62,0,0,1,112.48,64H87.8a1.46,1.46,0,0,1-1.38-2C100.28,25.52,132,0,169,0s68.68,25.52,82.54,62A1.46,1.46,0,0,1,250.13,64Z" /></g>
                  </g>
                </svg>
              </div>
              <div
                class="formBtn addCart main noCart"
                style="font-weight: 400;"
                data-recolor_raw
                data-scale>
                <p style="color: white">{{ "product.btnWord_add_pre" | t }}&nbsp;<span data-chosen_qnt></span>&nbsp;{{ "product.word_item" | t }} {{ "product.btnWord_add_post" | t }}</p>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 337.94 421.48"
                  style="width: 17px; margin: 0 0 2px auto;">
                  <g id="Ebene_2" data-name="Ebene 2">
                    <g id="Ebene_1-2" data-name="Ebene 1"><path style="fill: white" d="M337.69,385.58,301.08,86.79a10,10,0,0,0-9.88-8.74H46.73a10,10,0,0,0-9.88,8.74L.24,385.58A32,32,0,0,0,32,421.48H305.92A32,32,0,0,0,337.69,385.58ZM268.84,141.66c-.16,3.29-.48,6.53-.94,9.72-7.1,48.82-48.69,86.29-98.93,86.29S77.14,200.2,70,151.38c-.46-3.19-.78-6.43-.94-9.72v0a24.81,24.81,0,0,1,24.68-22.26q1.06,0,2.1.09A3.05,3.05,0,0,1,98.67,123a76.8,76.8,0,0,0,5.08,43.86C115,192.6,139.94,210.5,169,210.5s54-17.9,65.22-43.62a75.89,75.89,0,0,0,6.27-30.35,77,77,0,0,0-1.18-13.42,3.14,3.14,0,0,1,2.86-3.67c.66,0,1.34-.08,2-.08a24.81,24.81,0,0,1,24.68,22.26Z" /><path style="fill: white" d="M250.13,64H225.46a2.64,2.64,0,0,1-2.33-1.43c-11.27-21.74-31.31-36.2-54.16-36.2s-42.89,14.46-54.16,36.2A2.62,2.62,0,0,1,112.48,64H87.8a1.46,1.46,0,0,1-1.38-2C100.28,25.52,132,0,169,0s68.68,25.52,82.54,62A1.46,1.46,0,0,1,250.13,64Z" /></g>
                  </g>
                </svg>
              </div>
              <div
                class="formBtn addCart second"
                style="border: 1px solid {{ color_bg }}; font-weight: 400;"
                data-recolor_border_raw
                data-scale>
                <p data-recolor_text_raw="">{{ "product.btnWord_add_pre" | t }}&nbsp;<span data-chosen_qnt></span>&nbsp;{{ "product.word_item" | t }} {{ "product.btnWord_add_post" | t }}</p>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 337.94 421.48"
                  style="width: 17px; margin: 0 0 2px auto;">
                  <g id="Ebene_2" data-name="Ebene 2">
                    <g id="Ebene_1-2" data-name="Ebene 1"><path class="cartIcon_path" d="M337.69,385.58,301.08,86.79a10,10,0,0,0-9.88-8.74H46.73a10,10,0,0,0-9.88,8.74L.24,385.58A32,32,0,0,0,32,421.48H305.92A32,32,0,0,0,337.69,385.58ZM268.84,141.66c-.16,3.29-.48,6.53-.94,9.72-7.1,48.82-48.69,86.29-98.93,86.29S77.14,200.2,70,151.38c-.46-3.19-.78-6.43-.94-9.72v0a24.81,24.81,0,0,1,24.68-22.26q1.06,0,2.1.09A3.05,3.05,0,0,1,98.67,123a76.8,76.8,0,0,0,5.08,43.86C115,192.6,139.94,210.5,169,210.5s54-17.9,65.22-43.62a75.89,75.89,0,0,0,6.27-30.35,77,77,0,0,0-1.18-13.42,3.14,3.14,0,0,1,2.86-3.67c.66,0,1.34-.08,2-.08a24.81,24.81,0,0,1,24.68,22.26Z" /><path class="cartIcon_path" d="M250.13,64H225.46a2.64,2.64,0,0,1-2.33-1.43c-11.27-21.74-31.31-36.2-54.16-36.2s-42.89,14.46-54.16,36.2A2.62,2.62,0,0,1,112.48,64H87.8a1.46,1.46,0,0,1-1.38-2C100.28,25.52,132,0,169,0s68.68,25.52,82.54,62A1.46,1.46,0,0,1,250.13,64Z" /></g>
                  </g>
                </svg>
              </div>
              <a
                class="formBtn viewCart not_full"
                style="border: 1px solid {{ color_bg }}; font-weight: 400;"
                href="{{ shop.url }}/{{ lang }}/cart"
                data-recolor_border_raw
                data-scale>
                <p style="color:{{ color_raw }}" data-recolor_text_raw>{{ "product.btnWord_viewBasket" | t }}</p>
              </a>
              <a
                class="formBtn viewCart full"
                style="background-color: {{ color_raw }}; color: white;"
                href="{{ shop.url }}/{{ lang }}/cart"
                data-recolor_raw
                data-scale>
                <p style="color: white; text-align: center">{{ "product.btnWord_viewBasket" | t }}</p>
              </a>

              <!---------------------------------------------------------------------------->

            </div>

            <!----------------------------------------------------------------------------------->
          {% else %}
            <div class="sign_outOfstock">Deja nebeturime šios prekės</div>
          {% endif %}
        {% endform %}



        <div class="separator"></div>
        <div class="wrap_productDescription">
          {{ product.metafields.custom.bullets | metafield_tag }}
          <p class="productDescription">
            {{ product.description }}</p>
        </div>
        <div class="separator"></div>
        <div class="wrap_otherInfo">
          <div class="otherInfo">
            <img
              src="{{ 'icon_shipping.png' | asset_url }}"
              alt=""
              class="icon_otherInfo">
            <p>{{ "product.text_freeShipping" | t }}</p>
          </div>
          <div class="otherInfo">
            <img
              src="{{ 'icon_return.png' | asset_url }}"
              alt=""
              class="icon_otherInfo">
            <p>{{ "product.text_return" | t }}</p>
          </div>
          <div class="otherInfo">
            <img
              src="{{ 'icon_phone.png' | asset_url }}"
              alt=""
              class="icon_otherInfo">
            <p>{{ "product.text_contact" | t }}</p>
          </div>
        </div>
        <div class="wrap_payments">
          <img
            src="{{ 'icon_payment_visa.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_paypal.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_citadele.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_mastercard.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_klarna.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_applepay.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_amazon.svg' | asset_url }}"
            alt=""
            class="icon_payment">
          <img
            src="{{ 'icon_payment_googlepay.svg' | asset_url }}"
            alt=""
            class="icon_payment">
        </div>

      </div>
    </div>
  </div>
</section>

{% render 'inline_slider' %}

<script>
  let swiper
  let clear_to_add = true
  const product = {{ product | json}}
  const format = "{{ shop.money_format }}"
  const product_available = {{ product.available }}

  function find_matchedVariant() {
    let selected_radios = []
    document.querySelectorAll('input[type="radio"].optionRadio:checked').forEach(x => selected_radios.push(x.value))
    
    const matchedVariant = product.variants.find(variant => {
      for (let option of selected_radios) {
        if (!variant.options.includes(option)) {
          return false;
        }
      }
      return true;
    });
    return matchedVariant


  }
  function is_cart_empty() {
    {% if cart.item_count == 0 %}
      return true
    {% else %}
      return false
    {% endif %}
  }
  function variant_inBag(target_id) {
    let item = {{ cart.items | json }}.filter(x => x.id == target_id)[0]
    return {
      inCart: !! item
        ? item
        : false,
      qnt: !! item
        ? item.quantity
        : 0
    } // {inCart: {item/false}, qnt: 2}
  }
  function get_qnt(variant_id) {

    let qnt_list = [];
    let qnt_result;
    {% for variant in product.variants %};
      qnt_list.push([{{ variant.id }}, {{ variant.inventory_quantity }}]);{% endfor %};
    qnt_list.forEach(list_item => {
      if (list_item.includes(variant_id)) {
        qnt_result = list_item[1]
      }
    })
    return qnt_result
  }
</script>

{{ '4_3_setFunctions.js' | asset_url | script_tag }}
{{ '4_4_swiper.js' | asset_url | script_tag }}
{{ '4_5_qnt.js' | asset_url | script_tag }}


<script>

  window.addEventListener('DOMContentLoaded', () => {
    


    if (product_available) {
      const qnt_info = qnt_police(find_matchedVariant())
      
      handle_from_btns(qnt_info.isCart, qnt_info.error, qnt_info.qnt_avail)
      edit_form_alerts(qnt_info.isCart, qnt_info.error)
      hanlde_qntOptions(parseInt(qnt_info.qnt_request), parseInt(qnt_info.qnt_avail))
      
      edit_text_qnts(qnt_info.qnt_left, qnt_info.qnt_cart, qnt_info.qnt_request, qnt_info.qnt_avail)
      
      insert_swiper(get_images())
      initiate_swiper();
      reset_Transitions();
      edit_size_options()
      setTimeout(() => {
        set_bullet_colors()
      }, 20)

      {% if product.options contains 'Color' %}
        const checked = document.querySelector('.optionRadio[name="Color"]:checked').value.split(" ");
        recolor(checked[2], checked[1]);
        set_circleColors();
        recolor_bag_raw(checked[2])
      {% else %}
        recolor('{{ color_raw }}', '{{ color_bg }}');
        recolor_bag_raw('{{ color_raw }}')
      {% endif %};



    } else { // leave swiper on
      recolor('{{ color_raw }}', '{{ color_bg }}');
      insert_swiper(get_images())
      initiate_swiper();
      reset_Transitions();
      setTimeout(() => {
        set_bullet_colors()
      }, 20)
    }
  })

  if (product_available) {
    const radios = document.querySelectorAll('input[type="radio"].optionRadio')
    radios.forEach(radio => { // colors + sizes
      radio.addEventListener('change', (e) => {


        const matched_variant = find_matchedVariant()
        const qnt_info = qnt_police(matched_variant)

        edit_form_alerts(qnt_info.isCart, qnt_info.error)
        handle_from_btns(qnt_info.isCart, qnt_info.error, qnt_info.qnt_avail)
        edit_text_qnts(qnt_info.qnt_left, qnt_info.qnt_cart, qnt_info.qnt_request, qnt_info.qnt_avail)
       
        hanlde_qntOptions(parseInt(qnt_info.qnt_request), parseInt(qnt_info.qnt_avail))
        fix_qnt_choice(qnt_info.qnt_avail, qnt_info.isCart, qnt_info.error, qnt_info.qnt_request)
        
        recolor_default()
        edit_hiddenInput(matched_variant)
        changeUrl(matched_variant, get_colors().bg, get_colors().raw)
        bubble_jump(document.getElementById('qnt_in_box'))
        bubble_jump(document.querySelector('.p_stockLeft'))

        

        if (radio.getAttribute("name") == "Color") {
          document.querySelector('.swiper').style.opacity = "0%"
          document.querySelector('.sliderControls').style.opacity = "0%"
          edit_size_options() // dont mess with this function
          setTimeout(() => {
            insert_swiper(get_images())
            replaceSwiper()
            set_bullet_colors()
            document.querySelector('.sliderControls').style.opacity = "100%"
          }, 201)
        }

        const qntBox_isOpen = (document.querySelector('.input_box.qnt').dataset.box == 'open')
        if (qnt_info.error == 'cart_full') {toggle_qntInput(false);}
        else if (qntBox_isOpen) {toggle_qntInput(true)}
  

        })  
    })
  }

// ------------------------------------------------------------------------------------------------------------
  


// ------------------------------------------------------------------------------------------------------------
  function get_colors() {
    {% if product.options contains 'Color' and product.available %}
      const checked = document.querySelector('.optionRadio[name="Color"]:checked').value.split(" ");
      let bg = checked[1]
      let raw = checked[2]
    {% else %}
      let bg = '{{ color_bg }}'
      let raw = '{{ color_raw }}'

// -
    {% endif %};
    return {bg, raw}
  }
  function recolor_default() {
    {% if product.options contains 'Color' %}
      const checked_color = document.querySelector('.optionRadio[name="Color"]:checked').value.split(" ");
      recolor(checked_color[2], checked_color[1]);
      recolor_bag_raw(checked_color[2])
    {% else %};
      recolor('{{ color_raw }}', '{{ color_bg }}');
      recolor_bag_raw('{{ color_raw }}')

// -
    {% endif %};
  }
  function recolor(raw, bg) {
    const elements_raw = document.querySelectorAll('[data-recolor_raw]');
    const elements_bg = document.querySelectorAll('[data-recolor_bg]');
    const text_raw = document.querySelectorAll('[data-recolor_text_raw]');
    const border_raw = document.querySelectorAll('[data-recolor_border_raw]');
    text_raw.forEach(el => el.style.color = raw);
    elements_raw.forEach(el => el.style.backgroundColor = raw);
    elements_bg.forEach(el => el.style.backgroundColor = bg);
    border_raw.forEach(el => el.style.borderColor = raw);

    const parents_optionRadio = document.querySelectorAll('.option');
    parents_optionRadio.forEach(parent => {
      const inputElement = parent.querySelector('input[type="radio"]');

      if (inputElement && inputElement.checked) {
        parent.style.backgroundColor = bg;
        parent.querySelector('label').style.color = raw;

      } else {
        parent.removeAttribute('style');
        parent.querySelector('label').style.color = 'black';

      }


    })
  }
  function recolor_bag_raw(color) {
    const paths = document.querySelectorAll('.cartIcon_path')

    paths.forEach(path => {
      path.style.fill = color;
    })
  }

// ------------------------------------------------------------------------------------------------------------

  function get_images() {
    const images_raw = [];{% for image in product.images %}let {{ 'A' | append: forloop.index }} = document.createElement('img');
      {{ 'A' | append: forloop.index }}.setAttribute('src', '{{ image | img_url: 'master' | prepend: 'https:'}}');
      {{ 'A' | append: forloop.index }}.setAttribute('alt', '{{ image.alt }}')
      images_raw.push({{ 'A' | append: forloop.index }});{% endfor %};

    return images_raw
  }



// ------------------------------------------------------------------------------------------------------------



// ------------------------------------------------------------------------------------------------------------
  function edit_size_options() {
    {% if product.options contains 'Color' and product.options contains 'Size'%}
      const all_variants = []; // all product variants

// -
      {% for option in product.options_with_values %}
        {% unless option.name == "Color" %}
          {% for variant in product.variants %}
            {% if variant.inventory_quantity != 0 %}

// -
              all_variants.push({variant_bg: '{{ variant.option1 }}', size:'{{ variant.option2 }}'});

// -
            {% endif %}
          {% endfor %}
        {% endunless %}
      {% endfor %}
      
      // product variants that match the currenty selected color, even if the varaint qnt is 0
      const matching_variants = all_variants.filter(x => x.variant_bg.includes(get_colors().bg));
      const radio_sizes = document.querySelectorAll('.optionRadio[name="Size"]');
      let checked_and_true = []

      const available = Array.from(radio_sizes).filter(radio => {
        const radio_size = radio.value;
        const is_0 = !matching_variants.some(variant => variant.size === radio_size);
        if (radio.checked == true && !is_0){checked_and_true.push(radio)}
        radio.parentElement.classList.toggle('hide', is_0);
        return !is_0;
      });
      

      // if there is no radio thats available AND true, select the first one
      if (checked_and_true.length == 0) {
        const reselect = available[0]
        reselect.checked = true;
        reselect.dispatchEvent(new Event('change'));
      } 
      
      
    {% endif %}
  }
</script>



{{ '4_1_productZoom.js' | asset_url | script_tag }}
{{ '6_inline_slider.js' | asset_url | script_tag }}