

if (product_available) {
  const btn_buy = document.querySelector('.formBtn.buy')
  const btns_addCart = document.querySelectorAll('.formBtn.addCart')
  const btn_viewCart = document.querySelector('.formBtn.viewCart')

  btns_addCart.forEach(x => x.addEventListener('click', () => {
    document.querySelector('.form_productPage').submit()
  }))
  btn_buy.addEventListener('click', () => {
    const form = document.querySelector('.form_productPage');
    const input = document.createElement('input');
    input.value = "/checkout";
    input.type = "hidden";
    input.name = "return_to";

    form.appendChild(input);
    form.submit();
  })
}

function qnt_police(variant) {

  const x = variant_inBag(variant.id)
  const is_in_cart = x.inCart
  const qnt_cart = x.qnt
  const qnt_left = get_qnt(variant.id)
  const qnt_request = parseInt(document.querySelector('.qntInput').value)

  let allow_add = false
  let error = 'none'

  if (qnt_cart == qnt_left) {
    allow_add = false
    error = 'cart_full'
    item = x.inCart

  } else if ((is_in_cart && (qnt_cart + qnt_request) > qnt_left)) {
    allow_add = false
    error = 'cart'
    item = x.inCart

  } else if (is_in_cart && qnt_request > qnt_left) {
    allow_add = false
    error = 'qnt'
    item = x.inCart

  } else if (!is_in_cart && qnt_request > qnt_left) {
    allow_add = false
    error = 'qnt'
  } else {
    allow_add = true
  }
  
  let obj = {
    allow_add,
    error,
    qnt_request: qnt_request,
    qnt_cart: x.qnt,
    qnt_left: qnt_left,
    qnt_avail: qnt_left - x.qnt,
    isCart: !!is_in_cart,
    }

    return obj
}
function fix_qnt_choice(qnt_avail, isCart, error, qnt_request) {

  if (!qnt_avail){
    toggle_qntInput(false); 
    edit_form_alerts(isCart, error)
    handle_from_btns(isCart, error)  
    return
  }

  console.log('fire')
  

  const qnt_selected = document.querySelector('.qntInput').value
  const texts_chosen_qnt = document.querySelectorAll('[data-chosen_qnt]')
  const price_inside_btn = document.querySelector('[data-price_sum_calc]')
  
  if (qnt_selected > qnt_avail) {

    console.log('fix triggered')
    edit_qntInput(qnt_avail)
    edit_form_alerts(isCart, 'none')
    handle_from_btns(isCart, 'none') 
    texts_chosen_qnt.forEach(x => x.textContent = qnt_avail)
    price_inside_btn.textContent = formatMoney(find_matchedVariant().price * qnt_avail, format)


    // const qnt_Box = document.querySelector('.input_box.qnt')
    //     if (qnt_info.qnt_avail && qnt_Box.dataset.box == 'open') {toggle_qntInput(true); console.log('open box')}
    //     else if (!qnt_info.qnt_avail && qnt_Box.dataset.box == 'open') {toggle_qntInput(false); console.log('close box')}
    
  }
}


function handle_from_btns(isCart, error, qnt_avail) {

  const formBtns = document.querySelectorAll('.formBtn')
  const buy = document.querySelector('.formBtn.buy')

  const add_main_noCart = document.querySelector('.formBtn.addCart.main.noCart')
  const add_main_isCart = document.querySelector('.formBtn.addCart.main.isCart')
  const add_second = document.querySelector('.formBtn.addCart.second')

  const viewCart_notFull = document.querySelector('.formBtn.viewCart.not_full')
  const viewCart_full = document.querySelector('.formBtn.viewCart.full')

  formBtns.forEach(x => x.style.display = "none")

  if (is_cart_empty()) {
    show([buy, add_second])

  } else {
    !isCart ? show([add_main_noCart])
    : isCart && error == "cart_full" ? show([viewCart_full])
    : show([add_main_isCart, viewCart_notFull])
     
  }

}
function edit_text_qnts(qnt_left, qnt_cart, qnt_request) {
  document.querySelectorAll('[data-cart_qnt]').forEach(x => x.textContent = qnt_cart)
  document.querySelectorAll('[data-chosen_qnt]').forEach(x => x.textContent = qnt_request)
  document.querySelectorAll('[data-variant_qnt]').forEach(x => x.textContent = qnt_left);

  const sum = document.querySelector('[data-price_sum_calc]')
  sum.textContent = formatMoney(find_matchedVariant().price * qnt_request, format)
  bubble_jump(sum)

  const p_stockLeft = document.querySelector('.p_stockLeft')
  qnt_left <= 2 ?  p_stockLeft.classList.add('red') : p_stockLeft.classList.remove('red')

}
function edit_form_alerts(isCart, error) {

  const textAlerts = document.querySelectorAll('.textAlert')
  const textAlert_qntError = document.querySelector('.textAlert.qnt_error')
  const textAlert_cart_full = document.querySelector('.textAlert.cart_full')
  const textAlert_isCart = document.querySelector('.textAlert.isCart')
  textAlerts.forEach(x => x.style.display = "none")

  isCart && error == 'none' ? show([textAlert_isCart])
  : error == 'qnt' ? show([textAlert_qntError])
  : error == 'cart_full' ? show([textAlert_cart_full])
  : ''

}


function edit_hiddenInput(matchedVariant) {
  document.getElementById('product_id').value = matchedVariant.id
}
function set_circleColors() {
    const circle_option = document.querySelectorAll('.circle_option')
    circle_option.forEach(x => {
      const color_raw = x.dataset.circle_color.split(" ")[2];
      x.style.backgroundColor = color_raw;
    })
}
function changeUrl(matchedVariant, color_bg, color_raw) {
  const url = new URLParse(window.location.href, true)
  url.query.variant = matchedVariant.id
  url.query.color_bg = color_bg
  url.query.color_raw = color_raw
  window.history.replaceState(null, null, url.toString())
}
function bubble_jump(target) {
  target.classList.add('scale')
  setTimeout(() => {
    target.classList.remove('scale')
  }, 300)
}
function show(elements) {
  elements.forEach(x => x.style.display = "flex")
}
