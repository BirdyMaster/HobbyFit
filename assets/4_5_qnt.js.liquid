




let locked = false


if (product_available) {
    const btns_giveQuantity_BOTH = document.querySelectorAll('.btn_giveQuantity')
    const btn_cancelQuantity = document.querySelector('.btn_nearQtn.cancel')
    const btn_submitQuantity = document.querySelector('.btn_nearQtn.submit')
    const qntInput = document.querySelector('.qntInput')
    const decoy = document.querySelector('.qntInput_decoy')
    
    btn_cancelQuantity.addEventListener('click', () => {toggle_qntInput(false); toggle_btn_qntSubmit(false)});
    btns_giveQuantity_BOTH.forEach(x => x.addEventListener('click', () => {toggle_qntInput(true)}))
    btn_submitQuantity.addEventListener('click', () => {
        const qnt_info = qnt_police(find_matchedVariant())

        if (!parseInt(decoy.value) || parseInt(decoy.value) < 0) {

            // Shouldnt happen, because we hide it on input if its 0
            // This is a safety measure
            decoy.select();
            decoy.focus()
            return

        } else if (decoy.value > qnt_info.qnt_avail) {
            animateCSS('#qnt_in_box', 'shakeX');
            document.querySelectorAll('.textAlert').forEach(x => red_highlight(x))
            decoy.select()
            decoy.focus()

        } else {

            edit_form_alerts(qnt_info.isCart, qnt_info.error)
            edit_text_qnts(qnt_info.qnt_left, qnt_info.qnt_cart, decoy.value)
            hanlde_qntOptions(parseInt(decoy.value), parseInt(qnt_info.qnt_avail))
            edit_qntInput(decoy.value)

            recolor_default()
            edit_sum_price(find_matchedVariant(), format)
            toggle_qntInput(false)
        }
  
    });

    const qnt_btns = document.querySelectorAll('.qntOption')
    qnt_btns.forEach(x => x.addEventListener('click', (e) => {

        const qnt_info = qnt_police(find_matchedVariant())
        const qnt_selected = e.currentTarget.dataset.value;
        
        if (qnt_selected > qnt_info.qnt_avail) {
            animateCSS('#qnt_in_box', 'shakeX');
            document.querySelectorAll('.textAlert').forEach(x => red_highlight(x))
            console.log('return')
            return
        } else {

        edit_form_alerts(qnt_info.isCart, qnt_info.error)
        edit_text_qnts(qnt_info.qnt_left, qnt_info.qnt_cart, qnt_selected)
        hanlde_qntOptions(parseInt(qnt_selected), parseInt(qnt_info.qnt_avail))
        edit_qntInput(qnt_selected)

        recolor_default()
        toggle_qntInput(false)
        
        }
    }))

    decoy.addEventListener('input', (e) => {
        const value = e.currentTarget.value
        parseInt(decoy.value) && parseInt(decoy.value) > 0 ? toggle_btn_qntSubmit(true) : toggle_btn_qntSubmit(false)
    })
}


// when pressing "Go" in phone
function checkKeyPress(event, decoy) {

    const qntInput = document.querySelector('.qntInput')
    const qnt_info = qnt_police(find_matchedVariant())
    
    if (event.key === "Enter" || event.keyCode === 13) {

        if (!parseInt(decoy.value) || parseInt(decoy.value) < 0) {
            
            decoy.select();
            decoy.focus()
    
        } else if (decoy.value > qnt_info.qnt_avail) {
            animateCSS('#qnt_in_box', 'shakeX');
            document.querySelectorAll('.textAlert').forEach(x => red_highlight(x))
            decoy.select()
            decoy.focus()
    
        } else {
            decoy.blur()
            edit_form_alerts(qnt_info.isCart, qnt_info.error)
            edit_text_qnts(qnt_info.qnt_left, qnt_info.qnt_cart, decoy.value)
            edit_qntInput(decoy.value)
            hanlde_qntOptions(parseInt(decoy.value), parseInt(qnt_info.qnt_avail))
    
            recolor_default()
            edit_sum_price(find_matchedVariant(), format)
            toggle_qntInput(false)
        }
    }
}

function toggle_qntInput(value) {
    const parent = document.querySelector('.input_box.qnt')
    const qnt_front = document.querySelector('.quantity_front')
    const qnt_back = document.querySelector('.quantity_back')
    document.querySelector('.qntInput_decoy').value = ""

    
    if (value && ! locked) {
        locked = true
        parent.dataset.box = 'open'
        qnt_front.style.opacity = "0%"
        qnt_back.style.display = 'block'

        setTimeout(() => {qnt_back.style.opacity = "100%"}, 70)
        setTimeout(() => {qnt_front.style.display = 'none'; locked = false}, 151)

        const get_childrenHeight = parentElement =>[...parentElement.children].reduce((sum, child) => sum + child.getBoundingClientRect().height,0);
        

        parent.style.height = qnt_back.getBoundingClientRect().height + 'px'

    } else if (! locked) {

        locked = true
        parent.dataset.box = 'closed'
        qnt_back.style.opacity = "0%"
        qnt_front.style.display = 'flex'

        setTimeout(() => {qnt_front.style.opacity = "100%"}, 70)
        setTimeout(() => {locked = false; qnt_back.style.display = 'none'}, 151)

        const get_childrenHeight = parentElement =>[...parentElement.children].reduce((sum, child) => sum + child.getBoundingClientRect().height,0);
        console.log(get_childrenHeight(qnt_back))

        parent.style.height = '54px'
    }

}
function hanlde_qntOptions(qnt_selected, qnt_avail) { 

    // select all qnt options and deactivate them
    // find options with selected value and activate them
    // if item is unavailable, return

    if (!qnt_avail) {return} else if (qnt_selected > qnt_avail) {qnt_selected = qnt_avail}

    toggle_btn_giveQnt(qnt_avail)
    let option_d, option_d_exp, option_m, option_m_exp


    const last_d = document.querySelector(`.qntOption.d.last`);
    const last_m = document.querySelector(`.qntOption.m.last`);
    const last_d_exp = document.querySelector(`.qntOption.d.exp.last`);
    const last_m_exp = document.querySelector(`.qntOption.m.exp.last`);
    
    const qnt_btns = document.querySelectorAll('.qntOption')
    qnt_btns.forEach(btn => {
        btn.classList.remove('active');
        btn.removeAttribute('data-recolor_bg');
        btn.removeAttribute('data-recolor_text_raw');
        btn.removeAttribute('style');

        if (btn.dataset.value > qnt_avail) {
            btn.classList.add('disabled')
        } else {
            btn.classList.remove('disabled')
        }
    })

    if (qnt_selected <= 2) {
        option_d = document.querySelector(`.qntOption.d[data-value="${qnt_selected}"]`);
        option_m = document.querySelector(`.qntOption.m[data-value="${qnt_selected}"]`);
        option_d_exp = document.querySelector(`.qntOption.d.exp[data-value="${qnt_selected}"]`);
        option_m_exp = document.querySelector(`.qntOption.m.exp[data-value="${qnt_selected}"]`);

        set_newValue([
            {target: last_d, new_value: 5}, 
            {target: last_m, new_value: 3},
            {target: last_d_exp, new_value: 12}, 
            {target: last_m_exp, new_value: 10}
        ])


    } else if (qnt_selected <= 4) {
        option_d = document.querySelector(`.qntOption.d[data-value="${qnt_selected}"]`);
        option_m = last_m
        option_d_exp = document.querySelector(`.qntOption.d.exp[data-value="${qnt_selected}"]`);
        option_m_exp = document.querySelector(`.qntOption.m.exp[data-value="${qnt_selected}"]`);
        set_newValue([
            {target: option_m, new_value: qnt_selected},
            {target: last_d, new_value: 5}, 
            {target: last_d_exp, new_value: 12}, 
            {target: last_m_exp, new_value: 10}
        ])
        

    } else if (qnt_selected >= 5 && qnt_selected <= 9) {
        option_d = last_d
        option_m = last_m
        option_d_exp = document.querySelector(`.qntOption.d.exp[data-value="${qnt_selected}"]`);
        option_m_exp = document.querySelector(`.qntOption.m.exp[data-value="${qnt_selected}"]`);
        set_newValue([
            {target: option_d, new_value: qnt_selected},
            {target: option_m, new_value: qnt_selected},
            {target: last_d_exp, new_value: 12}, 
            {target: last_m_exp, new_value: 10}
        ])


    } else if (qnt_selected == 10 || qnt_selected == 11){
        option_d = last_d
        option_m = last_m
        option_d_exp = document.querySelector(`.qntOption.d.exp[data-value="${qnt_selected}"]`);
        option_m_exp = last_m_exp

        set_newValue([
            {target: option_d, new_value: qnt_selected},
            {target: option_m, new_value: qnt_selected},
            {target: option_m_exp, new_value: qnt_selected},
            {target: last_d_exp, new_value: 12}
        ])

    } else if (value >= 12) {

        option_d = last_d
        option_m = last_m
        option_d_exp = last_d_exp
        option_m_exp = last_m_exp

        set_newValue([
            {target: option_d, new_value: qnt_selected},
            {target: option_m, new_value: qnt_selected},
            {target: option_d_exp, new_value: qnt_selected},
            {target: option_m_exp, new_value: qnt_selected}
        ])

    }

    handle_activeOptions([option_d, option_d_exp, option_m, option_m_exp])
}

function handle_activeOptions(options) {
    options.forEach(x => {
        x.classList.add('active');
        x.setAttribute('data-recolor_bg', '');
        x.setAttribute('data-recolor_text_raw', '');
    })
    
}
function set_newValue(objects) {
    objects.forEach(obj => {
        obj.target.dataset.value = obj.new_value;
        obj.target.textContent = obj.new_value;
    })
}

function edit_qntInput(value) {
    const qntInput = document.querySelector('.qntInput')
    qntInput.value = value
    qntInput.setAttribute("value", value); // the data-value is just for me to see, but serves no purpose
}
function toggle_btn_qntSubmit(value) {

    const btn = document.querySelector('.btn_nearQtn.submit')
    value ? btn.classList.add('show') : btn.classList.remove('show')
}
function toggle_btn_giveQnt(qnt_available) {
    const btn_giveQuantity_d = document.querySelector('.btn_giveQuantity.d')
    const btn_giveQuantity_m = document.querySelector('.btn_giveQuantity.m')

    qnt_available >= 4 ? btn_giveQuantity_m.classList.remove('disabled') : btn_giveQuantity_m.classList.add('disabled')
    qnt_available >= 6 ? btn_giveQuantity_d.classList.remove('disabled') : btn_giveQuantity_d.classList.add('disabled') 

}


